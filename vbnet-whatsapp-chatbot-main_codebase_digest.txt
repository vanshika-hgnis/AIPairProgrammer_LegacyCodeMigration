Codebase Analysis for: C:\Users\lenovo\Desktop\SoftwareCourses\Reuse\Project\vbnet-whatsapp-chatbot-main

Directory Structure:
‚îî‚îÄ‚îÄ vbnet-whatsapp-chatbot-main
    ‚îú‚îÄ‚îÄ appsettings.Development.json
    ‚îú‚îÄ‚îÄ appsettings.json
    ‚îú‚îÄ‚îÄ AppSettings.vb
    ‚îú‚îÄ‚îÄ ChatService.vb
    ‚îú‚îÄ‚îÄ Controllers
    ‚îÇ   ‚îú‚îÄ‚îÄ ChatController.vb
    ‚îÇ   ‚îî‚îÄ‚îÄ UltraMessageController.vb
    ‚îú‚îÄ‚îÄ HookData.vb
    ‚îú‚îÄ‚îÄ Program.vb
    ‚îú‚îÄ‚îÄ Properties
    ‚îÇ   ‚îî‚îÄ‚îÄ launchSettings.json
    ‚îú‚îÄ‚îÄ README.md
    ‚îú‚îÄ‚îÄ Startup.vb
    ‚îú‚îÄ‚îÄ WhatsappChatbotVB.sln
    ‚îî‚îÄ‚îÄ WhatsappChatbotVB.vbproj

Summary:
Total files analyzed: 13
Total directories analyzed: 2
Estimated output size: 19.17 KB
Actual analyzed size: 16.92 KB
Total tokens: 3933
Actual text content size: 16.48 KB

File Contents:

==================================================
File: vbnet-whatsapp-chatbot-main\appsettings.Development.json
==================================================
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  }
}


==================================================
File: vbnet-whatsapp-chatbot-main\appsettings.json
==================================================
{
  "AppSettings": {
    "InstanceId": "instance1150",
    "Token": "YOUR_TOKEN"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}


==================================================
File: vbnet-whatsapp-chatbot-main\AppSettings.vb
==================================================
ÔªøNamespace WhatsappChatbotVB
    Public Class AppSettings
        Public Property InstanceId As String
        Public Property Token As String
    End Class
End Namespace


==================================================
File: vbnet-whatsapp-chatbot-main\ChatService.vb
==================================================
ÔªøImports Microsoft.Extensions.Options
Imports RestSharp
Imports System.Collections.Generic
Imports System
 
Namespace WhatsappChatbotVB
    Public Class ChatService
        Private ReadOnly _appSettings As WhatsappChatbotVB.AppSettings
        Private ReadOnly _randomSentences As String() = New String() {"Money", "Time", "Coffee", "A Better Job", "A Life", "Better Programming Skills", "Internet that was mine", "More Beer", "More Donuts", "Candy", "My Daughter", "Cable", "A Dining Room Table", "Better Couches", "A PS4", "A New Laptop", "A New Phone", "Water", "Rum", "Movies", "A Desktop Computer", "A Fish Tank", "My Socks", "My Jacket", "More Coffee", "More Koolaid", "More Power", "A Truck", "Toolbox", "More fish for Fish Tank", "A Screwdriver", "A Projector", "More Pants"}
        Private ReadOnly _randomJoks As String() = New String() { "My boss arrived at work in a brand-new Lamborghini. ""Wow,"" I said. ""That's an amazing car."" He replied, ""If you work hard, put all your hours in, and strive for excellence, I'll get another one next year.""","What has ears but cannot hear? A cornfield" , "What‚Äôs a cat‚Äôs favorite dessert? A bowl full of mice-cream.","Why did the blue jay get in trouble at school? For tweeting on a test!"," Why are basketball courts always wet? Because the players dribble.","What do you call bears with no ears? B.","If you sit down to enjoy a hot cup of coffee, then your boss will ask you to do something that will last until the coffee is cold.  ","My boss arrived at work in a brand-new Lamborghini. ""Wow,"" I said. ""That's an amazing car."" He replied, ""If you work hard, put all your hours in, and strive for excellence, I'll get another one next year.""","My boss arrived at work in a brand-new Lamborghini. ""Wow,"" I said. ""That's an amazing car."" He replied, ""If you work hard, put all your hours in, and strive for excellence, I'll get another one next year.""","My boss arrived at work in a brand-new Lamborghini. ""Wow,"" I said. ""That's an amazing car."" He replied, ""If you work hard, put all your hours in, and strive for excellence, I'll get another one next year."""}
        Private ReadOnly _random As Random = New Random()
        Public Sub New(ByVal appSettings As IOptions(Of WhatsappChatbotVB.AppSettings))
            _appSettings = appSettings.Value
        End Sub
        Shared  welcomeMsg as Boolean = false
 
            dim goodChoice as Boolean= false
            const  welcomeStr as String = "Welcome to ultramsg bot Demo \n \nPlease type one of these *commands*:\n"
            const  whatsappMenu as String = 
                "1Ô∏è‚É£ : Show server time.\n"+
                "2Ô∏è‚É£ : Send Image.\n"+
                "3Ô∏è‚É£ : Send Document.\n"+
                "4Ô∏è‚É£ : Send Audio.\n"+
                "5Ô∏è‚É£ : Send Voice.\n"+
                "6Ô∏è‚É£ : Send Video.\n"+
                "7Ô∏è‚É£ : Send Contact.\n"+
                "8Ô∏è‚É£ : Send Random Sentence.\n"+
                "9Ô∏è‚É£ : Send Random Joke.\n"+
                "üîü : Send Random Image.\n"

        Public Function OnChat(ByVal number As String, ByVal id As String) As String
            Dim client As RestClient = New RestClient()
           
            Dim request = New RestRequest(String.Empty, Method.Post)
            request.AddHeader("content-type", "application/x-www-form-urlencoded")
            request.AddQueryParameter("token", _appSettings.Token)
            request.AddQueryParameter("to", number)

           
            if (welcomeMsg = false) then 
                welcomeMsg = true
                id = "0"
                client = new RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/chat")
                request.AddQueryParameter("body", welcomeStr  + whatsappMenu)
                goodChoice=true
            end if 


            If Equals(id, "1") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/chat")
                request.AddQueryParameter("body", Date.Now)
                goodChoice = true
            End If

            If Equals(id, "2") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/image")
                request.AddQueryParameter("image", "https://file-example.s3-accelerate.amazonaws.com/images/test.jpg")
                request.AddQueryParameter("caption", "Image Caption")
                goodChoice = true
            End If

            If Equals(id, "3") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/document")
                request.AddQueryParameter("filename", "hello.pdf")
                request.AddQueryParameter("document", "https://file-example.s3-accelerate.amazonaws.com/documents/cv.pdf")
                goodChoice = true
            End If

            If Equals(id, "4") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/audio")
                request.AddQueryParameter("audio", "https://file-example.s3-accelerate.amazonaws.com/audio/2.mp3")
                goodChoice = true
            End If

            If Equals(id, "5") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/voice")
                request.AddQueryParameter("audio", "https://file-example.s3-accelerate.amazonaws.com/voice/oog_example.ogg")
                goodChoice = true
            End If

            If Equals(id, "6") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/video")
                request.AddQueryParameter("video", "https://file-example.s3-accelerate.amazonaws.com/video/test.mp4")
                request.AddQueryParameter("caption", "Video Caption")
                goodChoice = true
            End If

            If Equals(id, "7") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/contact")
                request.AddQueryParameter("contact", "14000000001@c.us")
                goodChoice = true
            End If

            If Equals(id, "8") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/chat")
                Dim randomIndex = _random.Next(0, _randomSentences.Length - 1)
                request.AddQueryParameter("body", _randomSentences(randomIndex))
                goodChoice = true
            End If

            If Equals(id, "9") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/chat")
                Dim randomIndex = _random.Next(0, _randomJoks.Count - 1)
                request.AddQueryParameter("body", _randomJoks(randomIndex))
                goodChoice = true
            End If

            If Equals(id, "10") Then
                client = New RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/image")
                Dim randomIndex = _random.Next(0, 100)
                request.AddQueryParameter("image", $"https://ultramsg.s3.us-west-2.amazonaws.com/image-example/{randomIndex}.jpg")
                request.AddQueryParameter("caption", $"Random Image {randomIndex}")
                goodChoice = true
            End If

            if (goodChoice =false) then 
                client = new RestClient($"https://api.ultramsg.com/{_appSettings.InstanceId}/messages/chat")
                request.AddQueryParameter("body", "``` üì¢ Incorrect command üì¢ ```\nPlease type one of these *commands*:\n" + whatsappMenu)
            end if 

            If client IsNot Nothing Then
                Dim response = client.Execute(request)
                If response.IsSuccessful Then Return String.Empty
                Return response.ErrorMessage
            End If
            Return String.Empty
        End Function
    End Class
End Namespace


==================================================
File: vbnet-whatsapp-chatbot-main\Controllers\ChatController.vb
==================================================
ÔªøImports Microsoft.AspNetCore.Mvc

Namespace WhatsappChatbotVB.Controllers
    <Route("api/")>
    <ApiController>
    Public Class ChatController
        Inherits ControllerBase
        Private ReadOnly _chatService As ChatService

        Public Sub New(ByVal chatService As ChatService)
            _chatService = chatService
        End Sub
        <HttpGet("{number}/{id}")>
        Public Function OnChat(ByVal number As String, id As String) As IActionResult
            Dim result = _chatService.OnChat(number, id)
            Return MyBase.Ok(result)
        End Function


    End Class
End Namespace


==================================================
File: vbnet-whatsapp-chatbot-main\Controllers\UltraMessageController.vb
==================================================
ÔªøImports Microsoft.AspNetCore.Mvc
Imports System
Imports System.Text.Json

Namespace WhatsappChatbotVB.Properties
    <Route("api/")>
    <ApiController>
    Public Class UltraMessageController
        Inherits ControllerBase
        Private ReadOnly _chatService As ChatService
        Public Sub New(ByVal chatService As ChatService)
            _chatService = chatService
        End Sub
        <HttpPost>
        Public Function Post(
        <FromBody> ByVal data As HookData) As IActionResult
            Dim result = _chatService.OnChat(data.Data.From, data.Data.Body)
            Console.WriteLine(JsonSerializer.Serialize(data))
            Return MyBase.Ok(data)
        End Function
    End Class
End Namespace


==================================================
File: vbnet-whatsapp-chatbot-main\HookData.vb
==================================================
ÔªøImports System.Text.Json.Serialization

Namespace WhatsappChatbotVB
    Public Class Data
        <JsonPropertyName("id")>
        Public Property Id As String

        <JsonPropertyName("from")>
        Public Property From As String

        <JsonPropertyName("to")>
        Public Property [To] As String

        <JsonPropertyName("ack")>
        Public Property Ack As String

        <JsonPropertyName("type")>
        Public Property Type As String

        <JsonPropertyName("body")>
        Public Property Body As String

        <JsonPropertyName("media")>
        Public Property Media As String

        <JsonPropertyName("fromMe")>
        Public Property FromMe As Boolean

        <JsonPropertyName("isForwarded")>
        Public Property IsForwarded As Boolean

        <JsonPropertyName("time")>
        Public Property Time As Long
    End Class
    Public Class HookData
        <JsonPropertyName("event_type")>
        Public Property EventType As String

        <JsonPropertyName("instanceId")>
        Public Property InstanceId As String

        <JsonPropertyName("data")>
        Public Property Data As Data
    End Class
End Namespace


==================================================
File: vbnet-whatsapp-chatbot-main\Program.vb
==================================================
ÔªøImports Microsoft.AspNetCore.Hosting
Imports Microsoft.Extensions.Hosting

Namespace WhatsappChatbotVB
    Public Class Program
        Public Shared Sub Main(ByVal args As String())
            Call CreateHostBuilder(args).Build().Run()
        End Sub

        Public Shared Function CreateHostBuilder(ByVal args As String()) As IHostBuilder
            Return Host.CreateDefaultBuilder(args).ConfigureWebHostDefaults(Sub(webBuilder) webBuilder.UseStartup(Of Startup)())
        End Function
    End Class
End Namespace


==================================================
File: vbnet-whatsapp-chatbot-main\Properties\launchSettings.json
==================================================
{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "iisSettings": {
    "windowsAuthentication": false,
    "anonymousAuthentication": true,
    "iisExpress": {
      "applicationUrl": "http://localhost:5637",
      "sslPort": 44307
    }
  },
  "profiles": {
    "IIS Express": {
      "commandName": "IISExpress",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "WhatsappChatbotVB": {
      "commandName": "Project",
      "applicationUrl": "https://localhost:6000;http://localhost:6001",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}

==================================================
File: vbnet-whatsapp-chatbot-main\README.md
==================================================
# [Ultramsg.com](https://ultramsg.com/?utm_source=github&utm_medium=csharp&utm_campaign=chatbot) vbnet-whatsapp-chatbot

Demo WhatsApp API ChatBot using Ultramsg API with VB.NET.



by [Ultramsg.com](https://ultramsg.com/?utm_source=github&utm_medium=vbnet&utm_campaign=chatbot)

# Dependencies

for local development purposes, a tunneling service is required. This example uses ngrok , You can download ngrok from [here](https://ngrok.com/download).

# Set the instance ID and token
Set the instance ID and token in **appsettings.json** file.

# run project 
```
dotnet watch
```
# Start ngrok 
Run ngrok For Windows :

```
ngrok http https://localhost:6000
```
Run ngrok For mac :
```
./ngrok http https://localhost:6000
```


# Set Webhook URL 

Go to your ultramsg account for set Webhook URL after copying the ngrok url and add **/api/** Route like this : 

```
https://61-44-136-9.ngrok.io/api/
```
and enable this option "Webhook on Received" .

![Alt text](https://blog.ultramsg.com/wp-content/uploads/2022/09/ultramsg-whatsapp-api-webhook.png "Webhook")


# receive WhatsApp messages and command processing
Congratulations.. Now you can try sending to WhatsApp number and testing the chatbot.

This is all you need to receive and read messages from users, and then respond to them.
You can develop the list and add more complex commands such as querying from Database and updating records in the database ..etc.

# Support
Use **Issues** to contact me

==================================================
File: vbnet-whatsapp-chatbot-main\Startup.vb
==================================================
ÔªøImports Microsoft.AspNetCore.Builder
Imports Microsoft.AspNetCore.Hosting
Imports Microsoft.Extensions.Configuration
Imports Microsoft.Extensions.DependencyInjection
Imports Microsoft.Extensions.Hosting
Imports Microsoft.OpenApi.Models

Namespace WhatsappChatbotVB
    Public Class Startup
        Public Sub New(ByVal configuration As IConfiguration)
            Me.Configuration = configuration
        End Sub

        Public ReadOnly Property Configuration As IConfiguration

        ' This method gets called by the runtime. Use this method to add services to the container.
        Public Sub ConfigureServices(ByVal services As IServiceCollection)

            services.AddControllers()
            services.AddSwaggerGen(Sub(c) c.SwaggerDoc("v1", New OpenApiInfo With {
.Title = "WhatsappChatbotVB",
.Version = "v1"
}))
            services.AddTransient(Of ChatService)()
            services.Configure(Of AppSettings)(Configuration.GetSection("AppSettings"))
        End Sub

        ' This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        Public Sub Configure(ByVal app As IApplicationBuilder, ByVal env As IWebHostEnvironment)
            If env.IsDevelopment() Then
                app.UseDeveloperExceptionPage()
                app.UseSwagger()
                app.UseSwaggerUI(Sub(c) c.SwaggerEndpoint("/swagger/v1/swagger.json", "WhatsappChatbotVB v1"))
            End If

            app.UseHttpsRedirection()

            app.UseRouting()

            app.UseAuthorization()

            app.UseEndpoints(Sub(endpoints) endpoints.MapControllers())
        End Sub
    End Class
End Namespace


==================================================
File: vbnet-whatsapp-chatbot-main\WhatsappChatbotVB.sln
==================================================
Ôªø
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.3.32811.315
MinimumVisualStudioVersion = 10.0.40219.1
Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "WhatsappChatbotVB", "WhatsappChatbotVB.vbproj", "{74F8A0DD-9BE0-4EB9-9EB3-ED8744536696}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{74F8A0DD-9BE0-4EB9-9EB3-ED8744536696}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{74F8A0DD-9BE0-4EB9-9EB3-ED8744536696}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{74F8A0DD-9BE0-4EB9-9EB3-ED8744536696}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{74F8A0DD-9BE0-4EB9-9EB3-ED8744536696}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {0CC10785-B1CD-4F08-8504-94E608ECB854}
	EndGlobalSection
EndGlobal


==================================================
File: vbnet-whatsapp-chatbot-main\WhatsappChatbotVB.vbproj
==================================================
Ôªø<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <OptionInfer>On</OptionInfer>
    <TargetFramework>net6.0</TargetFramework>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(ProjectDir)**\*.cs</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="RestSharp" Version="108.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
  </ItemGroup>

</Project>

